name: Deploy to Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_RESOURCE_GROUP: reminder-app-rg
  AZURE_LOCATION: eastus
  ACR_NAME: reminderappacr

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      backend_url: ${{ steps.terraform.outputs.backend_url }}
      frontend_url: ${{ steps.terraform.outputs.frontend_url }}
      acr_login_server: ${{ steps.terraform.outputs.acr_login_server }}
      static_web_app_token: ${{ steps.terraform.outputs.static_web_app_token }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0
        terraform_wrapper: false
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init
    
    - name: Terraform Plan
      working-directory: ./terraform
      run: terraform plan
      env:
        TF_VAR_postgres_admin_password: ${{ secrets.POSTGRES_PASSWORD }}
        TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
    
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      working-directory: ./terraform
      run: terraform apply -auto-approve
      env:
        TF_VAR_postgres_admin_password: ${{ secrets.POSTGRES_PASSWORD }}
        TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
    
    - name: Get Terraform Outputs
      if: github.ref == 'refs/heads/main'
      id: terraform
      working-directory: ./terraform
      run: |
        echo "backend_url=$(terraform output -raw backend_url)" >> $GITHUB_OUTPUT
        echo "frontend_url=$(terraform output -raw frontend_url)" >> $GITHUB_OUTPUT
        echo "acr_login_server=$(terraform output -raw container_registry_login_server)" >> $GITHUB_OUTPUT
        echo "static_web_app_token=$(terraform output -raw static_web_app_api_key)" >> $GITHUB_OUTPUT

  build-and-deploy-backend:
    needs: terraform
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Build and Push Backend Image
      working-directory: ./backend
      run: |
        az acr build --registry ${{ env.ACR_NAME }} \
          --image reminder-backend:${{ github.sha }} \
          --image reminder-backend:latest \
          .
    
    - name: Update Container App
      run: |
        az containerapp update \
          --name reminder-app-backend \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --image ${{ needs.terraform.outputs.acr_login_server }}/reminder-backend:${{ github.sha }}

  build-and-deploy-frontend:
    needs: terraform
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Build Frontend
      working-directory: ./frontend
      env:
        REACT_APP_API_URL: ${{ needs.terraform.outputs.backend_url }}/api
      run: npm run build
    
    - name: Deploy to Static Web App
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ needs.terraform.outputs.static_web_app_token }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "./frontend"
        output_location: "build"
        skip_app_build: true
